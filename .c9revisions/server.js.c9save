{"ts":1353438788828,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1353438851190,"patch":[[{"diffs":[[1,"var http = require(\"http\");\n\nhttp.createServer( function(req, res) {\n    res.end(\"Dave's first web server\");\n});\nconsole.log(\"http server started\");"]],"start1":0,"start2":0,"length1":0,"length2":148}]],"length":148,"saved":false}
{"ts":1353438961433,"patch":[[{"diffs":[[0,"er\");\n})"],[1,".listen(3000)"],[0,";\nconsol"]],"start1":103,"start2":103,"length1":16,"length2":29}]],"length":161,"saved":false}
{"ts":1353438990478,"patch":[[{"diffs":[[0,"ten("],[-1,"300"],[1,"8"],[0,"0);\n"]],"start1":115,"start2":115,"length1":11,"length2":9}]],"length":159,"saved":false}
{"ts":1353439010041,"patch":[[{"diffs":[[0,"isten(80"],[1,", \"personal.davehood.c9.io\""],[0,");\nconso"]],"start1":113,"start2":113,"length1":16,"length2":43}]],"length":186,"saved":false}
{"ts":1353439128377,"patch":[[{"diffs":[[0,"ten("],[-1,"80, \"personal.davehood.c9.io\""],[1,"process.env.PORT, process.env.IP"],[0,");\nc"]],"start1":115,"start2":115,"length1":37,"length2":40}]],"length":189,"saved":false}
{"ts":1353439850502,"patch":[[{"diffs":[[0," res) {\n"],[1,"    \n"],[0,"    res."]],"start1":61,"start2":61,"length1":16,"length2":21},{"diffs":[[0,"rver\");\n"],[1,"    \n"],[0,"}).liste"]],"start1":106,"start2":106,"length1":16,"length2":21},{"diffs":[[0,"nv.IP);\n"],[1,"\n"],[0,"console."]],"start1":156,"start2":156,"length1":16,"length2":17}]],"length":200,"saved":false}
{"ts":1353440418464,"patch":[[{"diffs":[[0," {\n    \n"],[1,"    res.writeHead( 200, {'Content-Type': 'text/plain'} );\n"],[0,"    res."]],"start1":66,"start2":66,"length1":16,"length2":74}]],"length":258,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353444158921,"patch":[[{"diffs":[[0,"es.end(\""],[1,"Welcome to "],[0,"Dave's f"]],"start1":137,"start2":137,"length1":16,"length2":27},{"diffs":[[0,"rst "],[-1,"web server"],[1,"fully cloud-capable app \" +\n        \"written in highly-scalable, non-blocking, asynchronous server-side JavaScript (Node.js) \" +\n        \"using a cloud-based IDE (Cloud9) \" +\n        \"with a cloud-based version control system (GitHub) \" +\n        \"running on a cloud Platform as a Service (Heroku) "],[0,"\");\n"]],"start1":165,"start2":165,"length1":18,"length2":306}]],"length":557,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353446336511,"patch":[[{"diffs":[[0,"es.end(\""],[1,"<h1>"],[0,"Welcome "]],"start1":137,"start2":137,"length1":16,"length2":20},{"diffs":[[0,"e's "],[-1,"first fully cloud-capable app "],[1,"Amazing Cloud App!</h1>"],[0,"\" +\n"]],"start1":163,"start2":163,"length1":38,"length2":31},{"diffs":[[0,"       \""],[-1,"w"],[1,"<p>W"],[0,"ritten i"]],"start1":195,"start2":195,"length1":17,"length2":20},{"diffs":[[0,"(Heroku)"],[-1," "],[1,".</p>\" +\n        \"<p>To do: connect to external services/APIs, \" +\n        \"connect to cloud-based SQL and noSQL databases, \" +\n        \"expose an API, \" +\n        \"write a simple UI that resides on another platform, \" +\n        \"deploy this to a truly open Platform as a Service (Cloud Foundry instance)"],[0,"\");\n    "]],"start1":458,"start2":458,"length1":17,"length2":320}]],"length":860,"saved":false}
{"ts":1353446341078,"patch":[[{"diffs":[[0,"nstance)"],[1,"</p>"],[0,"\");\n    "]],"start1":762,"start2":762,"length1":16,"length2":20}]],"length":864,"saved":false}
